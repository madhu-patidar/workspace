[  {    "type": "post",    "url": "http://0.0.0.0:3000/api/user_accounts",    "title": "1.User Registration",    "version": "1.0.0",    "name": "Registration",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Registrating user with its details, data to be send as raw data in body.</p>",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": " {\n  \"email\": \"a@b.com\",\n  \"gender\": \"male\",\n  \"phone_no\": 123456487,\n \"password\":\"aniket123\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "   {\n     \"id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"email\": \"a@bb.com\",\n  \"gender\": \"male\",\n  \"phone_no\": 1234567899,\n  \"role\":\"AppUser\",\n  \"birth_date\": \"2017-09-06T05:19:48.058Z\",\n  \"created_date\": \"2017-09-06T05:19:48.058Z\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"422\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 422 Invalid details\n  {\n  \"error\": {\n    \"statusCode\": 422,\n    \"name\": \"ValidationError\",\n    \"message\": \"The `user_account` instance is not valid.\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/user_accounts/loginAdmin",    "title": "3.Login Admin",    "version": "1.0.0",    "name": "admin_login",    "group": "Account_User",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Login only for admin.</p>",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": "{\n \"email\":\"a@bb.com\",\n \"password\":\"123456\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>This is access_token which is further used to place order and manipulate user details.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"id\": \"AQlREEfxCmosLASVsTHZgdEreOoUXLOjeFYwjWIC68i2Y7pdhfRUBQViyMDhkvAF\",\n  \"ttl\": 1209600,\n  \"created\": \"2017-09-06T09:47:07.867Z\",\n  \"userId\": \"59afc0f777094a03d49aa28f\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 login failed\n  {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"You ar not an Admin\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/user_accounts",    "title": "8.Get all user",    "version": "1.0.0",    "name": "getalluser",    "group": "Account_User",    "permission": [      {        "name": "admin"      }    ],    "description": "<p>Get all user from table with there details.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": " [\n{\n  \"first_name\": \"suhel\",\n  \"last_name\": \"khan\",\n  \"email\": \"suhel.khan@neosofttech.com\",\n  \"role\": \"admin\",\n  \"gender\": \"male\",\n  \"phone_no\": 8767375851,\n  \"birth_date\": \"1993-03-15T00:00:00.000Z\",\n  \"is_active\": true,\n  \"created_date\": \"2017-07-10T11:11:27.124Z\",\n  \"modified_date\": \"2017-09-06T12:07:43.035Z\",\n  \"username\": \"suhe.khan\",\n  \"id\": \"596360dffe8a19872e258748\",\n  \"Profile_IMG\": {\n    \"ImgURL\": \"http://10.0.100.213:8080/storage/image/SuhelKhan.jpg\",\n    \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_SuhelKhan_thumb.jpg\"\n  }\n},\n{\n  \"first_name\": \"aniket\",\n  \"last_name\": \"pracheta\",\n  \"email\": \"a@b.com\",\n  \"role\": \"admin\",\n  \"gender\": \"male\",\n  \"phone_no\": 7041097886,\n  \"birth_date\": \"1992-01-22T00:00:00.000Z\",\n  \"is_active\": true,\n  \"created_date\": \"2017-07-19T08:11:53.214Z\",\n  \"modified_date\": \"2017-07-24T11:30:48.821Z\",\n  \"username\": \"aniket\",\n  \"id\": \"596f1449b545041048ec81ec\",\n  \"Profile_IMG\": {\n    \"ImgURL\": \"http://10.0.100.213:8080/storage/image/iphone7-model-select-201703.png\",\n    \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_iphone7-model-select-201703_thumb.png\"\n  }\n}\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"401\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n  \"error\": {\n    \"statusCode\": 401,\n    \"name\": \"Error\",\n    \"message\": \"Authorization Required\",\n    \"code\": \"AUTHORIZATION_REQUIRED\",\n    }\n  }",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/user_accounts/login",    "title": "2.User Login",    "version": "1.0.0",    "name": "loginUser",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>User login send email and password as object in body as raw data.</p>",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": "{\n \"email\":\"a@bb.com\",\n \"password\":\"123456\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>This is access_token which is further used to place order and manipulate user details.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"id\": \"AQlREEfxCmosLASVsTHZgdEreOoUXLOjeFYwjWIC68i2Y7pdhfRUBQViyMDhkvAF\",\n  \"ttl\": 1209600,\n  \"created\": \"2017-09-06T09:47:07.867Z\",\n  \"userId\": \"59afc0f777094a03d49aa28f\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"401\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 401 login failed\n {\n  \"error\": {\n    \"statusCode\": 401,\n    \"name\": \"Error\",\n    \"message\": \"login failed\",\n    \"code\": \"LOGIN_FAILED\",\n    \"stack\": \"Error: login failed\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/user_accounts/:userId",    "title": "4.Get user details",    "version": "1.0.0",    "name": "login_user",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get user deatils from userID after sucess login,userID should be send in path with access_token as param.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>should be send in path.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " {\n  \"first_name\": \"suhel\",\n  \"last_name\": \"khan\",\n  \"email\": \"suhel.khan@neosofttech.com\",\n  \"role\": \"admin\",\n  \"gender\": \"male\",\n  \"phone_no\": 8767375751,\n  \"birth_date\": \"1993-03-15T00:00:00.000Z\",\n  \"is_active\": true,\n  \"created_date\": \"2017-07-10T11:11:27.124Z\",\n  \"modified_date\": \"2017-07-24T07:49:34.310Z\",\n  \"username\": \"suhe.khan\",\n  \"id\": \"596360dffe8a19872e258748\",\n  \"Profile_IMG\": {\n    \"ImgURL\": \"http://10.0.100.213:8080/storage/image/SuhelKhan.jpg\",\n    \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_SuhelKhan_thumb.jpg\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"401\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "   HTTP/1.1 401 Unknown user_account id\n {\n  \"error\": {\n    \"statusCode\": 401,\n    \"name\": \"Error\",\n    \"message\": \"\"Unknown user_account id\"\n    }\n}",          "type": "json"        },        {          "title": "Response (response from access_token):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n \"error\": {\n   \"statusCode\": 401,\n   \"name\": \"Error\",\n   \"message\": \"Authorization Required\",\n   \"code\": \"AUTHORIZATION_REQUIRED\",\n   }\n }",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/user_accounts/logout",    "title": "6.logout",    "version": "1.0.0",    "name": "logout",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Logout user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"statusCode\": 200\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 login failed\n  {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"something went wrong try again\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/user_accounts/loginSocial",    "title": "5.Social login",    "version": "1.0.0",    "name": "social_login",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Login through socail id, send the all parmeters in body as raw data obtain from successfully soacil login.</p>",    "parameter": {      "examples": [        {          "title": "Request-Example:",          "content": " {\n\"email\" : \"a@b.com\",\n\"idToken\" : \"sadff64564a564asdfasdf\",\n\"image\" : \"adsfads/img.jpg\",\n\"name\" : \"aniket\",\n\"provider\" : \"facebook\",\n\"token\" : \"adfdsafads54546465465465456\",\n\"uid\" : \"1469225983126437\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "id",            "description": "<p>This is access_token which is further used to place order and manipulate user details.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"id\": \"AQlREEfxCmosLASVsTHZgdEreOoUXLOjeFYwjWIC68i2Y7pdhfRUBQViyMDhkvAF\",\n  \"ttl\": 1209600,\n  \"created\": \"2017-09-06T09:47:07.867Z\",\n  \"userId\": \"59afc0f777094a03d49aa28f\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 login failed\n  {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"something went wrong try again\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "patch",    "url": "http://0.0.0.0:3000/api/user_accounts/:userId",    "title": "7.Update user details",    "version": "1.0.0",    "name": "update_user",    "group": "Account_User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Update user deatils, user deatils to be updated should be send in object as raw data in body.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>should be send in path.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"first_name\": \"suhel\",\n  \"last_name\": \"khan123\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " {\n  \"first_name\": \"suhel\",\n  \"last_name\": \"khan123\",\n  \"email\": \"suhel.khan@neosofttech.com\",\n  \"role\": \"admin\",\n  \"gender\": \"male\",\n  \"phone_no\": 8767375751,\n  \"birth_date\": \"1993-03-15T00:00:00.000Z\",\n  \"is_active\": true,\n  \"created_date\": \"2017-07-10T11:11:27.124Z\",\n  \"modified_date\": \"2017-07-24T07:49:34.310Z\",\n  \"username\": \"suhe.khan\",\n  \"id\": \"596360dffe8a19872e258748\",\n  \"Profile_IMG\": {\n    \"ImgURL\": \"http://10.0.100.213:8080/storage/image/SuhelKhan.jpg\",\n    \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_SuhelKhan_thumb.jpg\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"401\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "   HTTP/1.1 401 Unknown user_account id\n {\n  \"error\": {\n    \"statusCode\": 401,\n    \"name\": \"Error\",\n    \"message\": \"\"Unknown user_account id\"\n    }\n}",          "type": "json"        },        {          "title": "Response (response from access_token):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n \"error\": {\n   \"statusCode\": 401,\n   \"name\": \"Error\",\n   \"message\": \"Authorization Required\",\n   \"code\": \"AUTHORIZATION_REQUIRED\",\n   }\n }",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Account_User"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/addresses/getAddressbyUserId/:userId",    "title": "2.Get Address.",    "version": "1.0.0",    "name": "address_get",    "group": "Address_",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get all address of user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>should be send in path.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  [{\n  \"fulladdress\": \"railway colony\",\n  \"city\": \"mumbai\",\n  \"state\": \"maharashtra\",\n  \"pincode\": 400400,\n  \"country\": \"India\",\n  \"id\": \"59b0ebff238b7a03a5e73b24\",\n  \"userAccountId\": \"59afc0f777094a03d49aa28f\"\n}]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 Invalid user ID\n {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"Invalid user ID\"\n  }\n}",          "type": "json"        },        {          "title": "Response (example):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n\"error\": {\n  \"statusCode\": 402,\n  \"name\": \"Error\",\n  \"message\": \"Authorization Required\",\n  \"code\": \"AUTHORIZATION_REQUIRED\",\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Address_"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/addresses/AddAddress/:userId",    "title": "1.Post Address.",    "version": "1.0.0",    "name": "address_post",    "group": "Address_",    "permission": [      {        "name": "none"      }    ],    "description": "<p>posting address of user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>should be send in path.</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "data",            "description": "<p>address details should be send as json object in body as raw data.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n\"fulladdress\": \"railway colony\",\n\"city\": \"mumbai\",\n\"state\": \"maharashtra\",\n\"pincode\": 400400,\n\"country\": \"India\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"fulladdress\": \"railway colony\",\n  \"city\": \"mumbai\",\n  \"state\": \"maharashtra\",\n  \"pincode\": 400400,\n  \"country\": \"India\",\n  \"id\": \"59b0ebff238b7a03a5e73b24\",\n  \"userAccountId\": \"59afc0f777094a03d49aa28f\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model\"\n  }\n}",          "type": "json"        },        {          "title": "Response (example):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n\"error\": {\n  \"statusCode\": 402,\n  \"name\": \"Error\",\n  \"message\": \"Authorization Required\",\n  \"code\": \"AUTHORIZATION_REQUIRED\",\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Address_"  },  {    "type": "patch",    "url": "http://0.0.0.0:3000/api/addresses/:addressId",    "title": "3.Update Address.",    "version": "1.0.0",    "name": "address_update",    "group": "Address_",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Update address of user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "addressId",            "description": "<p>should be send in path you will get this id when you hit get all address API the id is addressId.</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "data",            "description": "<p>address details should be send as json object in body as raw data.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n\"fulladdress\": \"juhu circle\",\n\"city\": \"andhere\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"fulladdress\": \"juhu circle\",\n  \"city\": \"andhere\",\n  \"state\": \"maharashtra\",\n  \"pincode\": 400400,\n  \"country\": \"India\",\n  \"id\": \"59b0ebff238b7a03a5e73b24\",\n  \"userAccountId\": \"59afc0f777094a03d49aa28f\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model\"\n  }\n}",          "type": "json"        },        {          "title": "Response (example):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n\"error\": {\n  \"statusCode\": 402,\n  \"name\": \"Error\",\n  \"message\": \"Authorization Required\",\n  \"code\": \"AUTHORIZATION_REQUIRED\",\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Address_"  },  {    "type": "delete",    "url": "http://0.0.0.0:3000/api/addresses/:addressId",    "title": "4.Delete Address.",    "version": "1.0.0",    "name": "delete_address",    "group": "Address_",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Delete Address of user.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "addressId",            "description": "<p>should be send in path you will get this id when you hit get all address API the id is addressId.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"count\": 1\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model with id 59b0e12b8dfa63035dd76c1\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model with id 59b0e12b8dfa63035dd76c1\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Address_"  },  {    "type": "delete",    "url": "http://0.0.0.0:3000/api/shoppingcarts/:shoppingcartId",    "title": "5.Delete cart product.",    "version": "1.0.0",    "name": "delete_cart",    "group": "Cart",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Delete product from cart.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "shoppingcartId",            "description": "<p>obtain when you get cart from server in which ever product has Id that is shoppingcartId and this should be send in path.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"count\": 1\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model with id 59b0e12b8dfa63035dd76c1\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model with id 59b0e12b8dfa63035dd76c1\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Cart"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/shoppingcarts/cartcount/:userId",    "title": "2.Get cart count.",    "version": "1.0.0",    "name": "get_count_cart",    "group": "Cart",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Post product array in to cart with userId.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>should be send in path.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n \"userId\": \"5975ba6df6d9e115d3871e6a\",\n \"cartCount\": 3\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 error\n  {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"something went wrong\"\n  }\n}",          "type": "json"        },        {          "title": "Response (example):",          "content": "    HTTP/1.1  Invalid userId\n{\n  \"userId\": \"5975ba6df6d9e115d3871e6\",\n  \"cartCount\": 0\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Cart"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/shoppingcarts/addToCart",    "title": "1.Post products in cart.",    "version": "1.0.0",    "name": "post_cart",    "group": "Cart",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Post product array in to cart with userId.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "object",            "description": "<p>should contain userId with array of products and should be posted in body as raw data.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    \"userid\":\"5975ba6df6d9e115d3871e6a\",\n     \"products\":[{\n                 \"productId\":\"59770dbcee32740640a49f59\",\n                \"qty\":\"1\"\n                },\n                {\n                \"productId\":\"59771cc0ee32740640a49f5b\",\n                \"qty\":\"1\"\n                },\n                {\n                \"productId\":\"59771d97ee32740640a49f5d\",\n                \"qty\":\"1\"\n                 }\n                ]\n\n      }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\"message\": \"Product add to cart successfully\"}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 500 error\n  {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"something went wrong\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Cart"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/shoppingcarts/getCart",    "title": "3.Get product in cart.",    "version": "1.0.0",    "name": "product_in_cart",    "group": "Cart",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get array of product for the userId entered.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userid",            "description": "<p>should be send in params.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  [\n  {\n    \"id\": \"59afa23277094a03d49aa28d\",\n    \"productId\": \"59771cc0ee32740640a49f5b\",\n    \"product_producer\": \"urban ladder\",\n    \"product_name\": \"Fonteyn Study Table\",\n    \"productqty\": 6,\n    \"instock\": true,\n    \"product_cost\": 6000,\n    \"images\": [\n      {\n        \"id\": \"59830630ca395d99207e11ee\",\n        \"productId\": \"59771cc0ee32740640a49f5b\",\n        \"name\": \"fonteyn_01_55.jpg\",\n        \"type\": \"image/jpeg\",\n        \"container\": \"image\",\n        \"isActive\": true,\n        \"ImgURL\": \"http://10.0.100.213:8080/storage/image/fonteyn_01_55.jpg\",\n        \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_250thumb.jpg\",\n        \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_100thumb.jpg\"\n      }\n    ]\n  },\n  {\n    \"id\": \"59afa2ba77094a03d49aa28e\",\n    \"productId\": \"59771d97ee32740640a49f5d\",\n    \"product_producer\": \"Alibaba\",\n    \"product_name\": \"Twain Study Table\",\n    \"productqty\": 2,\n    \"instock\": true,\n    \"product_cost\": 6000,\n    \"images\": [\n      {\n        \"id\": \"59830646ca395d99207e11ef\",\n        \"productId\": \"59771d97ee32740640a49f5d\",\n        \"name\": \"Twain_Study_table_00.jpg\",\n        \"type\": \"image/jpeg\",\n        \"container\": \"image\",\n        \"isActive\": true,\n        \"ImgURL\": \"http://10.0.100.213:8080/storage/image/Twain_Study_table_00.jpg\",\n        \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_Twain_Study_table_00_250thumb.jpg\",\n        \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_Twain_Study_table_00_100thumb.jpg\"\n      }\n    ]\n  }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"401\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "   HTTP/1.1 402 AUTHORIZATION_REQUIRED\n{\n\"error\": {\n  \"statusCode\": 402,\n  \"name\": \"Error\",\n  \"message\": \"Authorization Required\",\n  \"code\": \"AUTHORIZATION_REQUIRED\",\n  }\n}",          "type": "json"        },        {          "title": "Response (example):",          "content": "    HTTP/1.1 401 Unknown user_account id\n {\n  \"error\": {\n    \"statusCode\": 401,\n    \"name\": \"Error\",\n    \"message\": \"\"Unknown user_account id\"\n    }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Cart"  },  {    "type": "patch",    "url": "http://0.0.0.0:3000/api/shoppingcarts/:shoppingcartId",    "title": "4.Update cart.",    "version": "1.0.0",    "name": "update_cart",    "group": "Cart",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Update quntity of product in cart.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "shoppingcartId",            "description": "<p>obtain when you get cart from server in which ever product has Id that is shoppingcartId and this should be send in path.</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "data",            "description": "<p>quntity to be updated should be send as json object in body as raw data.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n  \"productqty\":5\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  {\n  \"userId\": \"59afc0f777094a03d49aa28f\",\n  \"productid\": \"59771cc0ee32740640a49f5b\",\n  \"productqty\": 5,\n  \"instock\": true,\n  \"product_cost\": 6000,\n  \"createdate\": \"2017-09-07T06:03:23.553Z\",\n  \"id\": \"59b0e12b8dfa63035dd76c1a\",\n  \"product_name\": \"Fonteyn Study Table\",\n  \"product_producer\": \"urban ladder\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model with id 59b0e12b8dfa63035dd76c1\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model with id 59b0e12b8dfa63035dd76c1\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Cart"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/categories",    "title": "1.Get all category Category.",    "version": "1.0.0",    "name": "category_",    "group": "Category_",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get all category,passing filter in params you can also get images for category.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": true,            "field": "filter",            "description": "<p>filter  should be send in params it is used as query so you can get images also for category.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "filter={\"include\":\"images\"}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "  \n[\n  {\n    \"category_name\": \"CHAIR\",\n    \"category_isactive\": true,\n    \"category_description\": \"A chair is a piece of furniture with a raised surface supported by legs, commonly used to seat a single person.\",\n    \"id\": \"5975eaa79fd2891810282302\",\n    \"images\": {\n      \"id\": \"598447233f8ecf60be198fb0\",\n      \"categoryId\": \"5975eaa79fd2891810282302\",\n      \"name\": \"vitra_slow_chair_family_1_000.png\",\n      \"type\": \"image/png\",\n      \"isActive\": true,\n      \"container\": \"image\",\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/vitra_slow_chair_family_1_000.png\",\n      \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_vitra_slow_chair_family_1_000_thumb.png\"\n    }\n  },\n  {\n    \"category_name\": \"TABLE\",\n    \"category_isactive\": true,\n    \"category_description\": \"A table is an item of furniture with a flat top and one or more legs, used as a surface for working at, eating from or on which to place things\",\n    \"id\": \"5975eadf9fd2891810282303\",\n    \"images\": {\n      \"id\": \"5984472f3f8ecf60be198fb1\",\n      \"categoryId\": \"5975eadf9fd2891810282303\",\n      \"name\": \"tables.jpg\",\n      \"type\": \"image/jpeg\",\n      \"isActive\": true,\n      \"container\": \"image\",\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/tables.jpg\",\n      \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_tables_thumb.jpg\"\n    }\n  },\n  {\n    \"category_name\": \"BED\",\n    \"category_isactive\": true,\n    \"category_description\": \"A bed is a piece of furniture which is used as a place to sleep or relax.\",\n    \"id\": \"5975eb0a9fd2891810282304\",\n    \"images\": {\n      \"id\": \"598447393f8ecf60be198fb2\",\n      \"categoryId\": \"5975eb0a9fd2891810282304\",\n      \"name\": \"beds.jpg\",\n      \"type\": \"image/jpeg\",\n      \"isActive\": true,\n      \"container\": \"image\",\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/beds.jpg\",\n      \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_beds_thumb.jpg\"\n    }\n  },\n  {\n    \"category_name\": \"SOFA\",\n    \"category_isactive\": true,\n    \"category_description\": \"In homes, couches are normally found in the family room, living room, den, or the lounge.\",\n    \"id\": \"5975eb4d9fd2891810282305\",\n    \"images\": {\n      \"id\": \"598447483f8ecf60be198fb3\",\n      \"categoryId\": \"5975eb4d9fd2891810282305\",\n      \"name\": \"sofa.jpeg\",\n      \"type\": \"image/jpeg\",\n      \"isActive\": true,\n      \"container\": \"image\",\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/sofa.jpeg\",\n      \"ThumbURL\": \"http://10.0.100.213:8080/storage/thumbnail/_sofa_thumb.jpeg\"\n    }\n  }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model with id 59b0e12b8dfa63035dd76c1\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model with id 59b0e12b8dfa63035dd76c1\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Category_"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/orders/order",    "title": "1.Place Final Order.",    "version": "1.0.0",    "name": "1_Place_Final_Order",    "group": "Order",    "description": "<p>Placing final by providing card details and array of products</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>an object to be send in body as raw data with card deatils and array of products and address id</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": " {\n\"userId\":\"5975ba6df6d9e115d3871e6a\",\n\"addressId\":\"007\",\n\"card\": {\n\"exp_month\": 10,\n\"exp_year\": 2018,\n\"number\":4242424242424242,\n\"cvc\": 100\n},\n\n\"products\":[{\n \"productId\":\"59770dbcee32740640a49f59\",\n\"quantity\":\"1\"\n},\n{\n\"productId\":\"59771cc0ee32740640a49f5b\",\n\"quantity\":\"1\"\n},\n{\n\"productId\":\"59771d97ee32740640a49f5d\",\n\"quantity\":\"1\"\n }\n]\n\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{ orderId: 59af975377094a03d49aa287,\n message: 'order placed successfully' }",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "orderId",            "description": "<p>generated orderId</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>success message</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"402\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>error message.</p>"          }        ]      },      "examples": [        {          "title": "Response (card is invalid):",          "content": "HTTP/1.1 402 card is invalid\n{\n statusCode: 402,\n    message: 'Your card number is incorrect'\n}",          "type": "json"        },        {          "title": "Response (user is invalid):",          "content": "HTTP/1.1 402 Invalid User\n{\n statusCode: 402,\n    message: 'Invalid User'\n}",          "type": "json"        },        {          "title": "Response (response from stripe):",          "content": "HTTP/1.1 402 stripe error\n{\n statusCode: 402,\n    message: 'errors from stripe'\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Order"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/orders/allorderofuser/:userId",    "title": "2.Get all order of user.",    "version": "1.0.0",    "name": "getorder",    "group": "Order",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get all order of user from userid along with products details.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "[\n{\n  \"order\": {\n    \"createon\": \"2017-09-05T18:30:00.000Z\",\n    \"userId\": \"5975ba6df6d9e115d3871e6a\",\n    \"orderstatus\": \"transit\",\n    \"ordertotal\": 16999,\n    \"id\": \"59af90f1d6961803873f614a\",\n    \"address\": {\n      \"fulladdress\": \"Rabale\",\n      \"city\": \"Navi Mumbai\",\n      \"state\": \"Maharashtra\",\n      \"pincode\": 44564,\n      \"country\": \"India\",\n      \"id\": \"5984560d3f8ecf60be198fb4\",\n      \"userAccountId\": \"5975ba6df6d9e115d3871e6a\"\n    }\n  },\n  \"products\": [\n    {\n      \"productId\": \"59770dbcee32740640a49f59\",\n      \"product_producer\": \"urban ladder\",\n      \"product_name\": \"Bradbury Desk\",\n      \"product_avg_rating\": 3,\n      \"productqty\": 1,\n      \"product_cost\": 16999,\n      \"instock\": true,\n      \"images\": {\n        \"id\": \"598304f7ca395d99207e11ec\",\n        \"productId\": \"59770dbcee32740640a49f59\",\n        \"name\": \"Bradbury_Desk_Mahogany_Finish.jpg\",\n        \"type\": \"image/jpeg\",\n        \"container\": \"image\",\n        \"isActive\": true,\n        \"ImgURL\": \"http://10.0.100.213:8080/storage/image/Bradbury_Desk_Mahogany_Finish.jpg\",\n        \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_Bradbury_Desk_Mahogany_Finish_250thumb.jpg\",\n        \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_Bradbury_Desk_Mahogany_Finish_100thumb.jpg\"\n      }\n    }\n  ]\n},\n{\n  \"order\": {\n    \"createon\": \"2017-09-05T18:30:00.000Z\",\n    \"userId\": \"5975ba6df6d9e115d3871e6a\",\n    \"orderstatus\": \"transit\",\n    \"ordertotal\": 32999,\n    \"id\": \"59af918dd6961803873f614f\",\n    \"address\": {\n      \"fulladdress\": \"Ruby, Dadar\",\n      \"city\": \"Mumbai\",\n      \"state\": \"Maharashtra\",\n      \"pincode\": 41554,\n      \"country\": \"India\",\n      \"id\": \"5984561f3f8ecf60be198fb5\",\n      \"userAccountId\": \"5975ba6df6d9e115d3871e6a\"\n    }\n  },\n  \"products\": [\n    {\n      \"productId\": \"59771d97ee32740640a49f5d\",\n      \"product_producer\": \"Alibaba\",\n      \"product_name\": \"Twain Study Table\",\n      \"product_avg_rating\": 1,\n      \"productqty\": 1,\n      \"product_cost\": 6000,\n      \"instock\": true,\n      \"images\": {\n        \"id\": \"59830646ca395d99207e11ef\",\n        \"productId\": \"59771d97ee32740640a49f5d\",\n        \"name\": \"Twain_Study_table_00.jpg\",\n        \"type\": \"image/jpeg\",\n        \"container\": \"image\",\n        \"isActive\": true,\n        \"ImgURL\": \"http://10.0.100.213:8080/storage/image/Twain_Study_table_00.jpg\",\n        \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_Twain_Study_table_00_250thumb.jpg\",\n        \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_Twain_Study_table_00_100thumb.jpg\"\n      }\n    },\n    {\n      \"productId\": \"59771cc0ee32740640a49f5b\",\n      \"product_producer\": \"urban ladder\",\n      \"product_name\": \"Fonteyn Study Table\",\n      \"product_avg_rating\": 3,\n      \"productqty\": 1,\n      \"product_cost\": 6000,\n      \"instock\": true,\n      \"images\": {\n        \"id\": \"59830630ca395d99207e11ee\",\n        \"productId\": \"59771cc0ee32740640a49f5b\",\n        \"name\": \"fonteyn_01_55.jpg\",\n        \"type\": \"image/jpeg\",\n        \"container\": \"image\",\n        \"isActive\": true,\n        \"ImgURL\": \"http://10.0.100.213:8080/storage/image/fonteyn_01_55.jpg\",\n        \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_250thumb.jpg\",\n        \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_100thumb.jpg\"\n      }\n    }\n  ]\n}\n  ]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>error message.</p>"          }        ]      },      "examples": [        {          "title": "Response (invalid user):",          "content": "  HTTP/1.1 404 user is invalid\n  {\n\"error\": {\n  \"statusCode\": 404,\n  \"name\": \"Error\",\n  \"message\":\"Unknown user\"\n}\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Order"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/orders/orderofuser/:userId",    "title": "3.Get orders only from order table.",    "version": "1.0.0",    "name": "getorder2",    "group": "Order",    "description": "<p>Get all order of user from userid without products details,userId must be pass in path.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " [\n {\n   \"createon\": \"2017-09-05T18:30:00.000Z\",\n   \"userId\": \"5975ba6df6d9e115d3871e6a\",\n   \"orderstatus\": \"transit\",\n   \"ordertotal\": 16999,\n   \"id\": \"59af90f1d6961803873f614a\",\n   \"address\": {\n     \"fulladdress\": \"Rabale\",\n     \"city\": \"Navi Mumbai\",\n     \"state\": \"Maharashtra\",\n     \"pincode\": 44564,\n     \"country\": \"India\",\n     \"id\": \"5984560d3f8ecf60be198fb4\",\n     \"userAccountId\": \"5975ba6df6d9e115d3871e6a\"\n   }\n },\n {\n   \"createon\": \"2017-09-05T18:30:00.000Z\",\n   \"userId\": \"5975ba6df6d9e115d3871e6a\",\n   \"orderstatus\": \"transit\",\n   \"ordertotal\": 32999,\n   \"id\": \"59af918dd6961803873f614f\",\n   \"address\": {\n     \"fulladdress\": \"Ruby, Dadar\",\n     \"city\": \"Mumbai\",\n     \"state\": \"Maharashtra\",\n     \"pincode\": 41554,\n     \"country\": \"India\",\n     \"id\": \"5984561f3f8ecf60be198fb5\",\n     \"userAccountId\": \"5975ba6df6d9e115d3871e6a\"\n   }\n },\n {\n   \"createon\": \"2017-09-05T18:30:00.000Z\",\n   \"userId\": \"5975ba6df6d9e115d3871e6a\",\n   \"orderstatus\": \"transit\",\n   \"ordertotal\": 12000,\n   \"id\": \"59af975377094a03d49aa287\",\n   \"address\": {\n     \"fulladdress\": \"Rabale\",\n     \"city\": \"Navi Mumbai\",\n     \"state\": \"Maharashtra\",\n     \"pincode\": 44564,\n     \"country\": \"India\",\n     \"id\": \"5984560d3f8ecf60be198fb4\",\n     \"userAccountId\": \"5975ba6df6d9e115d3871e6a\"\n   }\n }\n]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>error message.</p>"          }        ]      },      "examples": [        {          "title": "Response (invalid user):",          "content": "  HTTP/1.1 404 user is invalid\n  {\n\"error\": {\n  \"statusCode\": 404,\n  \"name\": \"Error\",\n  \"message\":\"Unknown user\"\n}\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Order"  },  {    "type": "get",    "url": "http://0.0.0.0:3000/api/orders/orderno/:orderno",    "title": "4.Get all product in order.",    "version": "1.0.0",    "name": "getorderitems",    "group": "Order",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Get all product in order from order number, order number must be send in path.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": " {\n\"orderId\": \"59ad4d458a0a3404968e02f0\",\n\"userId\": \"59a91002fd5806467149397a\",\n\"createon\": \"2017-09-03T18:30:00.000Z\",\n\"orderstatus\": \"transit\",\n\"ordertotal\": 86000,\n\"address\": {\n  \"fulladdress\": \"Rabale\",\n  \"city\": \"Mumbai\",\n  \"state\": \"Maharashtra\",\n  \"pincode\": 400056,\n  \"country\": \"India\",\n  \"id\": \"59ad4d368a0a3404968e02ef\",\n  \"userAccountId\": \"59a91002fd5806467149397a\"\n},\n\"products\": [\n  {\n    \"productId\": \"59771cc0ee32740640a49f5b\",\n    \"product_producer\": \"urban ladder\",\n    \"product_name\": \"Fonteyn Study Table\",\n    \"product_avg_rating\": 3,\n    \"productqty\": 1,\n    \"product_cost\": 6000,\n    \"instock\": true,\n    \"images\": {\n      \"id\": \"59830630ca395d99207e11ee\",\n      \"productId\": \"59771cc0ee32740640a49f5b\",\n      \"name\": \"fonteyn_01_55.jpg\",\n      \"type\": \"image/jpeg\",\n      \"container\": \"image\",\n      \"isActive\": true,\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/fonteyn_01_55.jpg\",\n      \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_250thumb.jpg\",\n      \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_fonteyn_01_55_100thumb.jpg\"\n    }\n  },\n  {\n    \"productId\": \"597720edee32740640a49f61\",\n    \"product_producer\": \"somu stores\",\n    \"product_name\": \"Robinson  \",\n    \"product_avg_rating\": 3,\n    \"productqty\": 1,\n    \"product_cost\": 40000,\n    \"instock\": true,\n    \"images\": {\n      \"id\": \"5983151dca395d99207e1200\",\n      \"productId\": \"597720edee32740640a49f61\",\n      \"name\": \"820170629075720img.jpg\",\n      \"type\": \"image/jpeg\",\n      \"container\": \"image\",\n      \"isActive\": true,\n      \"ImgURL\": \"http://10.0.100.213:8080/storage/image/820170629075720img.jpg\",\n      \"ThumbURL250\": \"http://10.0.100.213:8080/storage/thumbnail/_820170629075720img_250thumb.jpg\",\n      \"ThumbURL100\": \"http://10.0.100.213:8080/storage/thumbnail/_820170629075720img_100thumb.jpg\"\n    }\n  }\n]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"500\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>error message.</p>"          }        ]      },      "examples": [        {          "title": "Response (invalid orderId):",          "content": "    HTTP/1.1 500 No such order found\n   {\n  \"error\": {\n    \"statusCode\": 500,\n    \"message\": \"No such order found\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Order"  },  {    "type": "post",    "url": "http://0.0.0.0:3000/api/ratings/rateProduct",    "title": "1.Rating the product.",    "version": "1.0.0",    "name": "rating",    "group": "Rating",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Rating the product.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>generated after success login and should be send in params.</p>"          },          {            "group": "Parameter",            "type": "object",            "optional": false,            "field": "data",            "description": "<p>rating should be send as json object in body as raw data along with user_id and product_id.</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "  {\n  \"user_id\": \"59afc0f777094a03d49aa28f\",\n  \"product_id\": \"59771cc0ee32740640a49f5b\",\n  \"rating\": 4\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "number",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"200\"> <li></li> </ol>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n\"Thanks for Rating\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "statusCode",            "description": "<ol start=\"404\"> <li></li> </ol>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "error",            "description": "<p>error object with message.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "    HTTP/1.1 404 Unknown model\n {\n  \"error\": {\n    \"statusCode\": 404,\n    \"name\": \"Error\",\n    \"message\": \"could not find a model\",\n    \"code\": \"MODEL_NOT_FOUND\",\n    \"stack\": \"Error: could not find a model\"\n  }\n}",          "type": "json"        }      ]    },    "filename": "NeoStore/writeapi.js",    "groupTitle": "Rating"  }]
